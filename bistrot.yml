apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front
  template:
    metadata:
      labels:
        app: front
    spec:
      containers:
      - name: front-container
        image: amanbarakat/frontbi:latest
        imagePullPolicy: Always
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: back-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: back
  template:
    metadata:
      labels:
        app: back
    spec:
      containers:
        - name: registry-container
          image: amanbarakat/registry:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 8761
        - name: zuul-container
          image: amanbarakat/zuul:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 8080
        - name: recette-container
          image: amanbarakat/recette:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 8081
        - name: menu-container
          image: amanbarakat/menu:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 8082
        - name: reservation-container
          image: amanbarakat/booking:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 8083
---
apiVersion: v1
kind: Service
metadata:
  name: front-service
spec:
  ports:
    - name: http
      targetPort: 3000
      port: 3000
  selector:
    app: front
---

apiVersion: v1
kind: Service
metadata:
  name: back-service
spec:
  ports:
    - name: registry
      targetPort: 8761
      port: 8761
    - name: zuul
      targetPort: 8080
      port: 8080
    - name: recette
      targetPort: 8081
      port: 8081
    - name: menu
      targetPort: 8082
      port: 8082
    - name: reservation
      targetPort: 8083
      port: 8083
  type: ClusterIP
  selector:
    app: back
---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: front-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefixStrip
spec:
  rules:
    - host: front.localhost
      http:
        paths:
          - path: /
            backend:
              serviceName: front-service
              servicePort: http
          - path: /recepies
            backend:
              serviceName: front-service
              servicePort: http
          - path: /reservation
            backend:
              serviceName: front-service
              servicePort: http
    - host: registry.localhost
      http:
        paths:
        - backend:
            serviceName: back-service
            servicePort: registry
    - host: zuul.localhost
      http:
        paths:
        - backend:
            serviceName: back-service
            servicePort: zuul
    - host: recette.localhost
      http:
        paths:
        - backend:
            serviceName: back-service
            servicePort: recette
    - host: reservation.localhost
      http:
        paths:
        - backend:
            serviceName: back-service
            servicePort: reservation
    - host: menu.localhost
      http:
        paths:
        - backend:
            serviceName: back-service
            servicePort: menu